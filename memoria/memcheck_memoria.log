==17013== Memcheck, a memory error detector
==17013== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17013== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==17013== Command: bin/memoria
==17013== Parent PID: 17012
==17013== 
==17013== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==17013==    at 0x40684E9: __libc_sigaction (sigaction.c:76)
==17013==    by 0x40685CB: sigaction (sigaction.c:40)
==17013==    by 0x804F5DB: signal_init (signal.c:17)
==17013==    by 0x804F607: iniciar_signals (signal.c:21)
==17013==    by 0x804ECED: main (main.c:14)
==17013==  Address 0xbea5c014 is on thread 1's stack
==17013==  in frame #0, created by __libc_sigaction (sigaction.c:50)
==17013==  Uninitialised value was created by a stack allocation
==17013==    at 0x804F59B: signal_init (signal.c:13)
==17013== 
==17013== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==17013==    at 0x40684E9: __libc_sigaction (sigaction.c:76)
==17013==    by 0x40685CB: sigaction (sigaction.c:40)
==17013==    by 0x804F5DB: signal_init (signal.c:17)
==17013==    by 0x804F619: iniciar_signals (signal.c:22)
==17013==    by 0x804ECED: main (main.c:14)
==17013==  Address 0xbea5c014 is on thread 1's stack
==17013==  in frame #0, created by __libc_sigaction (sigaction.c:50)
==17013==  Uninitialised value was created by a stack allocation
==17013==    at 0x804F59B: signal_init (signal.c:13)
==17013== 
==17013== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==17013==    at 0x40684E9: __libc_sigaction (sigaction.c:76)
==17013==    by 0x40685CB: sigaction (sigaction.c:40)
==17013==    by 0x804F5DB: signal_init (signal.c:17)
==17013==    by 0x804F62B: iniciar_signals (signal.c:23)
==17013==    by 0x804ECED: main (main.c:14)
==17013==  Address 0xbea5c014 is on thread 1's stack
==17013==  in frame #0, created by __libc_sigaction (sigaction.c:50)
==17013==  Uninitialised value was created by a stack allocation
==17013==    at 0x804F59B: signal_init (signal.c:13)
==17013== 
==17013== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==17013==    at 0x40684E9: __libc_sigaction (sigaction.c:76)
==17013==    by 0x40685CB: sigaction (sigaction.c:40)
==17013==    by 0x804F5DB: signal_init (signal.c:17)
==17013==    by 0x804F63D: iniciar_signals (signal.c:24)
==17013==    by 0x804ECED: main (main.c:14)
==17013==  Address 0xbea5c014 is on thread 1's stack
==17013==  in frame #0, created by __libc_sigaction (sigaction.c:50)
==17013==  Uninitialised value was created by a stack allocation
==17013==    at 0x804F59B: signal_init (signal.c:13)
==17013== 
==17013== Thread 3:
==17013== Invalid read of size 1
==17013==    at 0x412B383: vfprintf (vfprintf.c:1632)
==17013==    by 0x4130695: printf (printf.c:33)
==17013==    by 0x8049FC0: memwrite_comportamiento (clientes.c:231)
==17013==    by 0x8049991: ejecutar_proceso (clientes.c:60)
==17013==    by 0x80498AD: atender_proceso (clientes.c:25)
==17013==    by 0x405E294: start_thread (pthread_create.c:333)
==17013==    by 0x41CE0AD: clone (clone.S:114)
==17013==  Address 0x42afd82 is 0 bytes after a block of size 10 alloc'd
==17013==    at 0x402C17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==17013==    by 0x4053048: recibir_buffer_t (mensajes.c:68)
==17013==    by 0x8049F99: memwrite_comportamiento (clientes.c:229)
==17013==    by 0x8049991: ejecutar_proceso (clientes.c:60)
==17013==    by 0x80498AD: atender_proceso (clientes.c:25)
==17013==    by 0x405E294: start_thread (pthread_create.c:333)
==17013==    by 0x41CE0AD: clone (clone.S:114)
==17013== 
==17013== Thread 5:
==17013== Invalid write of size 1
==17013==    at 0x4030F43: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==17013==    by 0x804B9CB: memoria_escribir (operaciones.c:513)
==17013==    by 0x804BC39: memoria_escribir_por_dirlog (operaciones.c:585)
==17013==    by 0x804ACA1: memalloc (operaciones.c:184)
==17013==    by 0x8049E81: memalloc_comportamiento (clientes.c:196)
==17013==    by 0x804994F: ejecutar_proceso (clientes.c:48)
==17013==    by 0x80498AD: atender_proceso (clientes.c:25)
==17013==    by 0x405E294: start_thread (pthread_create.c:333)
==17013==    by 0x41CE0AD: clone (clone.S:114)
==17013==  Address 0x42a3b58 is 0 bytes after a block of size 10,240 alloc'd
==17013==    at 0x402E0B8: calloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==17013==    by 0x804D575: init_ram (paginacion.c:35)
==17013==    by 0x804D54D: iniciar_paginacion (paginacion.c:26)
==17013==    by 0x804ECF2: main (main.c:15)
==17013== 
==17013== Invalid read of size 1
==17013==    at 0x4030F40: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==17013==    by 0x804B9CB: memoria_escribir (operaciones.c:513)
==17013==    by 0x804BC39: memoria_escribir_por_dirlog (operaciones.c:585)
==17013==    by 0x804ACA1: memalloc (operaciones.c:184)
==17013==    by 0x8049E81: memalloc_comportamiento (clientes.c:196)
==17013==    by 0x804994F: ejecutar_proceso (clientes.c:48)
==17013==    by 0x80498AD: atender_proceso (clientes.c:25)
==17013==    by 0x405E294: start_thread (pthread_create.c:333)
==17013==    by 0x41CE0AD: clone (clone.S:114)
==17013==  Address 0x66a2000 is not stack'd, malloc'd or (recently) free'd
==17013== 
==17013== 
==17013== Process terminating with default action of signal 11 (SIGSEGV)
==17013==  Access not within mapped region at address 0x66A2000
==17013==    at 0x4030F40: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==17013==    by 0x804B9CB: memoria_escribir (operaciones.c:513)
==17013==    by 0x804BC39: memoria_escribir_por_dirlog (operaciones.c:585)
==17013==    by 0x804ACA1: memalloc (operaciones.c:184)
==17013==    by 0x8049E81: memalloc_comportamiento (clientes.c:196)
==17013==    by 0x804994F: ejecutar_proceso (clientes.c:48)
==17013==    by 0x80498AD: atender_proceso (clientes.c:25)
==17013==    by 0x405E294: start_thread (pthread_create.c:333)
==17013==    by 0x41CE0AD: clone (clone.S:114)
==17013==  If you believe this happened as a result of a stack
==17013==  overflow in your program's main thread (unlikely but
==17013==  possible), you can try to increase the size of the
==17013==  main thread stack using the --main-stacksize= flag.
==17013==  The main thread stack size used in this run was 8388608.
==17013== 
==17013== HEAP SUMMARY:
==17013==     in use at exit: 12,321 bytes in 101 blocks
==17013==   total heap usage: 980 allocs, 879 frees, 52,912 bytes allocated
==17013== 
==17013== Thread 1:
==17013== 20 bytes in 5 blocks are definitely lost in loss record 12 of 28
==17013==    at 0x402C17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==17013==    by 0x804D5EB: init_bitmap_frames (paginacion.c:53)
==17013==    by 0x804D552: iniciar_paginacion (paginacion.c:27)
==17013==    by 0x804ECF2: main (main.c:15)
==17013== 
==17013== 24 (8 direct, 16 indirect) bytes in 1 blocks are definitely lost in loss record 15 of 28
==17013==    at 0x402C17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==17013==    by 0x408B67E: list_create_element (in /usr/lib/libcommons.so)
==17013==    by 0x408A48E: list_add (in /usr/lib/libcommons.so)
==17013==    by 0x804DFBF: add_new_page_table (paginacion.c:365)
==17013==    by 0x804A0BB: iniciar_paginas (clientes.c:257)
==17013==    by 0x8049D03: new_instance_comportamiento (clientes.c:156)
==17013==    by 0x8049939: ejecutar_proceso (clientes.c:44)
==17013==    by 0x80498AD: atender_proceso (clientes.c:25)
==17013==    by 0x405E294: start_thread (pthread_create.c:333)
==17013==    by 0x41CE0AD: clone (clone.S:114)
==17013== 
==17013== 36 bytes in 4 blocks are definitely lost in loss record 16 of 28
==17013==    at 0x402C17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==17013==    by 0x804B728: memoria_leer (operaciones.c:462)
==17013==    by 0x804AFAD: primer_segmento (operaciones.c:278)
==17013==    by 0x804A614: memalloc (operaciones.c:34)
==17013==    by 0x8049E81: memalloc_comportamiento (clientes.c:196)
==17013==    by 0x804994F: ejecutar_proceso (clientes.c:48)
==17013==    by 0x80498AD: atender_proceso (clientes.c:25)
==17013==    by 0x405E294: start_thread (pthread_create.c:333)
==17013==    by 0x41CE0AD: clone (clone.S:114)
==17013== 
==17013== 40 bytes in 5 blocks are definitely lost in loss record 17 of 28
==17013==    at 0x402C17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==17013==    by 0x408B67E: list_create_element (in /usr/lib/libcommons.so)
==17013==    by 0x408A48E: list_add (in /usr/lib/libcommons.so)
==17013==    by 0x804D60B: init_bitmap_frames (paginacion.c:55)
==17013==    by 0x804D552: iniciar_paginacion (paginacion.c:27)
==17013==    by 0x804ECF2: main (main.c:15)
==17013== 
==17013== 544 bytes in 4 blocks are possibly lost in loss record 27 of 28
==17013==    at 0x402E0B8: calloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==17013==    by 0x4011726: allocate_dtv (dl-tls.c:322)
==17013==    by 0x401214B: _dl_allocate_tls (dl-tls.c:539)
==17013==    by 0x405ECC3: allocate_stack (allocatestack.c:588)
==17013==    by 0x405ECC3: pthread_create@@GLIBC_2.1 (pthread_create.c:539)
==17013==    by 0x405F28F: pthread_create@GLIBC_2.0 (pthread_create.c:765)
==17013==    by 0x4053C3A: clientes_administrar (conexiones.c:42)
==17013==    by 0x804ED2C: main (main.c:20)
==17013== 
==17013== LEAK SUMMARY:
==17013==    definitely lost: 104 bytes in 15 blocks
==17013==    indirectly lost: 16 bytes in 2 blocks
==17013==      possibly lost: 544 bytes in 4 blocks
==17013==    still reachable: 11,657 bytes in 80 blocks
==17013==         suppressed: 0 bytes in 0 blocks
==17013== Reachable blocks (those to which a pointer was found) are not shown.
==17013== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==17013== 
==17013== For counts of detected and suppressed errors, rerun with: -v
==17013== ERROR SUMMARY: 966 errors from 12 contexts (suppressed: 0 from 0)
